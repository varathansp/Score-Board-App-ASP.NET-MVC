@model ScoreBoardApp.Models.Fixture

@{
    ViewBag.Title = "CreateFixtures";
    List<SelectListItem> GameTypeList = new List<SelectListItem>();

    GameTypeList.Add(new SelectListItem { Text = "KnockOut", Value = "KnockOut", });
    GameTypeList.Add(new SelectListItem { Text = "SemiFinals", Value = "SemiFinals", });
    GameTypeList.Add(new SelectListItem { Text = "Final", Value = "Final", });

    List<SelectListItem> GameList = new List<SelectListItem>();
    GameList.Add(new SelectListItem { Text = "Badminton", Value = "Badminton" });
    GameList.Add(new SelectListItem { Text = "Carrom", Value = "Carrom" });
    GameList.Add(new SelectListItem { Text = "Chess", Value = "Chess" });
    GameList.Add(new SelectListItem { Text = "TT", Value = "TT" });
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@*-moz-box-sizing: border-box; // Added rule
   -webkit-box-sizing: border-box; // Added rule
    box-sizing:border-box; // Added rule*@

<h2>Create Fixtures</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.LabelFor(model => model.gameType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gameType,GameTypeList, "----Select Type-----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gameType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gameName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gameName,GameList, "----Select Game---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gameName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.team1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.team1,(IEnumerable<SelectListItem>)ViewBag.teamsList, "----Select Team----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.team1, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.tm1pl1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tm1pl1, (IEnumerable<SelectListItem>)ViewBag.playersList, "---Select Player----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tm1pl1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tm1pl2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tm1pl2, (IEnumerable<SelectListItem>)ViewBag.playersList, "---Select Player----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tm1pl2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.team2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.team2, (IEnumerable<SelectListItem>)ViewBag.teamsList, "----Select Team----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.team2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tm2pl1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tm2pl1, (IEnumerable<SelectListItem>)ViewBag.playersList, "---Select Player----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tm2pl1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tm2pl2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tm2pl2, (IEnumerable<SelectListItem>)ViewBag.playersList, "---Select Player----", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tm2pl2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.venue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.venue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.venue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "FixturesIndex")
</div>
